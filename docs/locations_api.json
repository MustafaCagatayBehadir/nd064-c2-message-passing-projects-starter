{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/api/locations/{location_id}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Unique ID for a given Location",
                    "name": "location_id",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                },
                "operationId": "get_location_resource",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "UdaConnect"
                ]
            }
        }
    },
    "info": {
        "title": "UdaConnect API",
        "version": "0.1.0"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "tags": [
        {
            "name": "UdaConnect",
            "description": "Geolocation."
        }
    ],
    "definitions": {
        "Location": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "person_id": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "string"
                },
                "latitude": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}